#!/usr/bin/env ruby

require "bundler/setup"
require "simatic"

def if_prop *prop_to_find
  index = ARGV.find_index { |p| prop_to_find.include? p }
  next_prop = ARGV[index+1] unless index.nil?
  yield next_prop unless index.nil?
end

if_prop '-h', '--help' do |next_prop|
  help_doc = <<HELPDOC
s7read - Simatic S7-300 memory reader utilite.

USAGE
  s7read <ip> <address> (-t|--type <type>) [-r|--rack <rack>] [-s|--slot <slot>] [-h|--help]
  avaliable types #{Simatic::Types.avaliable}

EXAMPLE
  read 192.168.0.1 db0.dbw4 -t int

HELPDOC

  print help_doc
  exit
end

raise "Error. Not enough params, type -h for help." unless ARGV.length >= 2

ip = ARGV.shift
address = ARGV.shift

type = nil
slot = 2
rack = 0

if_prop '-t', '--type' do |value|
  type = value
end

if_prop '-s', '--slot' do |value|
  slot = value.to_i
end

if_prop '-r', '--rack' do |value|
  rack = value.to_i
end

Simatic::Plc.exchange(ip, rack: rack, slot: slot) do |plc|
  value = plc.read(address).value
  puts "#{ip}:#{rack}:#{slot}:#{address} #{Simatic::Types.parse value, type}"
end